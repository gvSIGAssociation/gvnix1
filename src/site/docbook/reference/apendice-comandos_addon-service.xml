<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xml:id="apendice-comandos_addon-service"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1998/Math/MathML"
         xmlns:ns4="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook">
         
  <title xml:lang="es">Comandos del add-on Service</title>

  <para xml:lang="es">Para una descripción detallada de las características
  del add-on consultar la documentación del <link linkend="addon-service">
  add-on Service</link>.</para>
  
  <table>
    <title xml:lang="es">Comandos del add-on Service</title>

    <tgroup cols="2">
      <colspec colwidth="145" />
      <colspec colwidth="300" />
      <thead>
        <row>
          <entry xml:lang="es" align="center">Comando</entry>

          <entry xml:lang="es" align="center">Descripción</entry>
        </row>
      </thead>

      <tbody>
        <row>
          <entry><link linkend="apendice-comandos_addon-service_class">remote service
          class</link></entry>

          <entry xml:lang="es">Crea una clase Java que actuará como servicio local
          dentro de la aplicación</entry>
        </row>

        <row>
          <entry><link
          linkend="apendice-comandos_addon-service_operation">remote service
          operation</link></entry>

          <entry xml:lang="es">Añade un nuevo método en una clase Java</entry>
        </row>

        <row>
          <entry><link
          linkend="apendice-comandos_addon-service_define_ws">remote service define
          ws</link></entry>

          <entry xml:lang="es">Hace que una clase Java pueda ser accedida desde
          el exterior a través de un servicio web</entry>
        </row>

        <row>
          <entry><link
          linkend="apendice-comandos_addon-service_export_operation">remote service
          export operation</link></entry>

          <entry xml:lang="es">Hace que un método de una clase Java pueda
          ser accedido desde el exterior a través de una operación
          del servicio web</entry>
        </row>

        <row>
          <entry><link
          linkend="apendice-comandos_addon-service_list_operation">remote service
          list operation</link></entry>

          <entry xml:lang="es">Muestra el listado de métodos de una clase Java que
          podrían ser ofrecidos al exterior como operaciones del servicio web</entry>
        </row>

        <row>
          <entry><link
          linkend="apendice-comandos_addon-service_export_ws">remote service export
          ws</link></entry>

          <entry xml:lang="es">Crea en el proyecto la infraestructura necesaria
          definida por un <emphasis>WSDL</emphasis> para ofrecer ciertas operaciones
          mediante un servicio web
          </entry>
        </row>

        <row>
          <entry><link
          linkend="apendice-comandos_addon-service_import_ws">remote service import
          ws</link></entry>

          <entry xml:lang="es">Crea en el proyecto la infraestructura necesaria
          definida por un <emphasis>WSDL</emphasis> para acceder a ciertas operaciones
          situadas en un servicio web</entry>
        </row>

        <row>
          <entry><link
          linkend="apendice-comandos_addon-service_ws_list">remote service ws
          list</link></entry>

          <entry xml:lang="es">Lista los servicios web que se encuentran definidos
          en la aplicación</entry>
        </row>

        <row>
          <entry><link
          linkend="apendice-comandos_addon-service_security_ws">remote service
          security ws</link></entry>

          <entry xml:lang="es">Añade o actualiza la configuración necesaria para firmar las
          peticiones que se hacen a un servicio web remoto</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <section xml:id="apendice-comandos_addon-service_class">
    <title>remote service class</title>

    <para xml:lang="es">Crea una clase Java que actuará como servicio local
    dentro de la aplicación. El servicio se podrá utilizar desde
    cualquier otra clase Java definiendo una propiedad del tipo de la clase
    de servicio con la anotación <emphasis>@Autowired</emphasis>.</para>
    
    <para xml:lang="es">Sus parámetros son:
    <variablelist>
        <varlistentry>
          <term>--class</term>

          <listitem>
            <para xml:lang="es"><emphasis>[Requerido] [Clase Java] [Autocompletado]</emphasis></para>

            <para xml:lang="es">Paquete y nombre donde crear la clase Java
            de servicio.</para>
          </listitem>
        </varlistentry>
    </variablelist></para>
  </section>

  <section xml:id="apendice-comandos_addon-service_operation">
    <title>remote service operation</title>

    <para xml:lang="es">Añade un nuevo método en una clase Java.
    La clase Java puede ser una entidad, controlador,
    servicio o cualquier otro tipo.</para>

    <para xml:lang="es">Sus parámetros son:
    <variablelist>
      <varlistentry>
        <term>--name</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Cadena]</emphasis></para>

          <para xml:lang="es">Nombre del método a añadir en la clase Java.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--service</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Clase Java] [Autocompletado]</emphasis></para>

          <para xml:lang="es">Paquete y nombre de la clase Java donde crear el
          nuevo método.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--return</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Tipo Java] [Autocompletado]</emphasis></para>

          <para xml:lang="es">Tipo de dato Java que devolverá el método.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--paramNames</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Nombre de los parámetros de entrada del método,
          separados mediante comas y sin espacios.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--paramTypes</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Tipos Java] [Autocompletado]</emphasis></para>

          <para xml:lang="es">Tipos Java de los parámetros de entrada del método,
          separados mediante comas y sin espacios.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--exceptions</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Tipos Java de las excepciones que puede lanzar el
          método, separados mediante comas y sin espacios.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    </para>
  </section>

  <section xml:id="apendice-comandos_addon-service_define_ws">
    <title>remote service define ws</title>

    <para xml:lang="es">Hace que una clase Java pueda ser accedida
    desde el exterior a través de un servicio web.
    Para ello, creará toda la infraestructura necesaria para
    que sistemas externos puedan comunicarse con ella mediante los protocolos
    y tecnologías propias de los servicios web. Si la clase indicada como
    parámetro no existe, será creada automáticamente.</para>
    
    <para xml:lang="es">Se recomienda no especificar en este comando
    ningún parámetro opcional si no es estrictamente necesario
    y se conoce las implicaciones que tendrá desde el punto de vista
    de la interoperabilidad de servicios web. Si no se especifica, para
    cada parámetro se proporcionará un valor adecuado para facilitar
    la máxima interoperabilidad del servicio web con el exterior.</para>
    
    <para xml:lang="es">Tras publicar una clase Java a través de un
    servicio web, sus métodos todavía no serán accesibles como
    operaciones del servicio web hasta que no se le indique
    para cada método.</para>

    <para xml:lang="es">Sus parámetros son:
    <variablelist>
      <varlistentry>
        <term>--class</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Clase Java] [Autocompletado]</emphasis></para>

          <para xml:lang="es">Paquete y nombre de la clase Java a hacer
          accesible desde el exterior a través de un servicio web.
          Si la clase Java no existe, será creada y además se le aplicará
          las características propias de un servicio local. Por ejemplo,
          <emphasis>org.gvnix.test.service.Service</emphasis>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--serviceName</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Nombre con el que se quiere publicar el servicio web.
          Por defecto, tomará el mismo nombre que la clase Java. Por ejemplo,
          <emphasis>Service</emphasis>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--portTypeName</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Nombre para el tipo de puerto o
          <emphasis>PortType</emphasis> del servicio web.
          Por defecto, tomará el mismo nombre que la clase Java seguido del sufijo 
          <emphasis>PortType</emphasis>. Por ejemplo, <emphasis>ServicePortType
          </emphasis>.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--addressName</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Dirección URL relativa a la raíz de la aplicación
          desde donde se podrá acceder al servicio web.
          Por defecto, tomará el mismo nombre que la clase Java.
          Por ejemplo, <emphasis>Service</emphasis>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--targetNamespace</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Espacio de nombres o <emphasis>Namespace</emphasis>
          del servicio web. Debe tener formato de URL. Por defecto,
          tendrá el mismo valor que el paquete de la clase Java
          en sentido inverso y con formato de URL. Por ejemplo,
          <emphasis>http://service.test.gvnix.org/</emphasis>.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    </para>
  </section>

  <section xml:id="apendice-comandos_addon-service_export_operation">
    <title>remote service export operation</title>

    <para xml:lang="es">Hace que un método de una clase Java pueda
    ser accedido desde el exterior a través de una 
    operación del servicio web. Para ello, creará 
    toda la infraestructura necesaria para que sistemas
    externos puedan comunicarse con ella mediante los protocolos
    y tecnologías propias de los servicios web. Si la clase indicada como
    parámetro no está configurada todavía para ser accedida a través de un
    servicio web, se le aplicará esta configuración automáticamente.</para>
    
    <para xml:lang="es">Se recomienda no especificar en este comando
    ningún parámetro opcional si no es estrictamente necesario
    y se conoce las implicaciones que tendrá desde el punto de vista
    de la interoperabilidad de servicios web. Si no se especifica, para
    cada parámetro se proporcionará un valor adecuado para facilitar
    la máxima interoperabilidad de la operación del servicio web
    con el exterior.</para>

    <para xml:lang="es">Sus parámetros son:
    <variablelist>
      <varlistentry>
        <term>--class</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Clase Java] [Autocompletado]</emphasis></para>

          <para xml:lang="es">Paquete y nombre de la clase Java que contiene el método
          que se desea hacer accesible a través de una operación del servicio web. 
          Por ejemplo, <emphasis>org.gvnix.test.service.Service</emphasis>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--method</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Cadena]</emphasis></para>

          <para xml:lang="es">Nombre del método que se desea hacer accesible
          a través de una operación del servicio web. Por ejemplo, 
          <emphasis>method</emphasis>.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--operationName</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Nombre que tendrá la operación del servicio
          web y que dará acceso al método de la clase Java. Por defecto,
          tomará el mismo nombre que el método. Por ejemplo, 
          <emphasis>method</emphasis>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--resultName</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Nombre que tendrá el resultado de la operación del
          servicio web y que será de un tipo de datos equivalente al resultado
          del método. Por defecto, tomará el nombre <emphasis>result</emphasis>.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--resultNamespace</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Espacio de nombres o <emphasis>Namespace</emphasis>
          del resultado de la operación del servicio web. Debe tener formato de
          URL. Por defecto, tendrá el mismo valor que el paquete de la clase Java
          en sentido inverso y con formato de URL. Por ejemplo,
          <emphasis>http://service.test.gvnix.org/</emphasis>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--responseWrapperName</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Nombre que tendrá el objeto que contendrá la
          respuesta de la operación del servicio web. Por defecto, tomará el
          mismo nombre que el método seguido del sufijo  <emphasis>Response
          </emphasis>. Por ejemplo, <emphasis>methodResponse</emphasis>.</para>
        </listitem>
      </varlistentry>
      
      <varlistentry>
        <term>--responseWrapperNamespace</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Espacio de nombres o <emphasis>Namespace</emphasis>
          del objeto que contendrá el resultado de la operación del servicio web.
          Debe tener formato de URL. Por defecto, tendrá el mismo valor que el
          paquete de la clase Java en sentido inverso y con formato de URL.
          Por ejemplo, <emphasis>http://service.test.gvnix.org/</emphasis>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--requestWrapperName</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Nombre que deberá tener el objeto que contendrá la
          petición a la operación del servicio web. Por defecto, tomará el
          mismo nombre que el método. Por ejemplo, <emphasis>method</emphasis>.
          </para>
        </listitem>
      </varlistentry>
      
      <varlistentry>
        <term>--requestWrapperNamespace</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Opcional] [Cadena]</emphasis></para>

          <para xml:lang="es">Espacio de nombres o <emphasis>Namespace</emphasis>
          del objeto que contendrá el la petición a la operación del servicio web.
          Debe tener formato de URL. Por defecto, tendrá el mismo valor que el
          paquete de la clase Java en sentido inverso y con formato de URL.
          Por ejemplo, <emphasis>http://service.test.gvnix.org/</emphasis>.</para>
        </listitem>
      </varlistentry>

    </variablelist>
    </para>
  </section>

  <section xml:id="apendice-comandos_addon-service_list_operation">
    <title>remote service list operation</title>

    <para xml:lang="es">Muestra el listado de métodos de una clase Java que podrían
    ser ofrecidos como operaciones del servicio web. La clase Java debe haber sido
    previamente definida como accesible a través de un servicio web.</para>

    <para xml:lang="es">Sus parámetros son:
    <variablelist>
      <varlistentry>
        <term>--class</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Clase Java] [Autocompletado]</emphasis></para>

          <para xml:lang="es">Paquete y nombre de la clase Java de la que obtener
          el listado de métodos que podrían ser ofrecidos como operaciones del
          servicio web. Por ejemplo, <emphasis>org.gvnix.test.service.Service
          </emphasis>.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    </para>
  </section>

  <section xml:id="apendice-comandos_addon-service_export_ws">
    <title>remote service export ws</title>

    <para xml:lang="es">Crea en el proyecto toda la infraestructura necesaria para
    ofrecer ciertas operaciones mediante un servicio web. El servicio web y sus
    operaciones vendrán definidas mediante un contrato de servicio o
    <emphasis>WSDL</emphasis>.</para>
    
    <para xml:lang="es">El comando creará una clase Java que representará
    en el proyecto al servicio web y creará dentro tantos métodos como
    operaciones hubiesen definidas en el contrato de servicio. Con esto,
    el servicio web y sus operaciones ya son accesibles desde el exterior.  
    Será responsabilidad del desarrollador el implementar la lógica de
    negocio de cada método.</para>
    
    <para xml:lang="es">Sus parámetros son:    
    <variablelist>
      <varlistentry>
        <term>--wsdl</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Cadena]</emphasis></para>

          <para xml:lang="es">Ruta al archivo que define el contrato de servicio o
          <emphasis>WSDL</emphasis> cuya infraestructura Java se desea crear en
          el proyecto. La ruta puede ser a un archivo local 
          mediante <emphasis>file://ruta</emphasis>, a una dirección web mediante
          <emphasis>http://ruta</emphasis> o a una dirección web segura mediante
          <emphasis>https://ruta</emphasis>.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    </para>
  </section>

  <section xml:id="apendice-comandos_addon-service_import_ws">
    <title>remote service import ws</title>

    <para xml:lang="es">Crea en el proyecto toda la infraestructura necesaria para
    acceder a ciertas operaciones situadas en un servicio web. El servicio web y sus
    operaciones vendrán definidas mediante un contrato de servicio o
    <emphasis>WSDL</emphasis>.</para>
    
    <para xml:lang="es">El comando creará una clase Java que representará
    en el proyecto al servicio web y creará dentro tantos métodos como
    operaciones hubiesen definidas en el contrato de servicio. Invocando
    a alguno de estos métodos se estará accediendo a la operación
    correspondiente del sistema externo.</para>
    
    <para xml:lang="es">Sus parámetros son:
    <variablelist>
      <varlistentry>
        <term>--wsld</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Cadena]</emphasis></para>

          <para xml:lang="es">Ruta al archivo que define el contrato de servicio o
          <emphasis>WSDL</emphasis> cuya infraestructura Java se desea crear en
          el proyecto. La ruta puede ser a un archivo local 
          mediante <emphasis>file://ruta</emphasis>, a una dirección web mediante
          <emphasis>http://ruta</emphasis> o a una dirección web segura mediante
          <emphasis>https://ruta</emphasis>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--class</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Clase Java] [Autocompletado]</emphasis></para>
          
          <para xml:lang="es">Paquete y nombre de la clase Java que permitirá
          acceder al servicio web externo creando un método por cada una de
          las operaciones del servicio web. Si la clase Java no existe,
          será creada y además se le aplicará las características
          propias de un servicio local. Por ejemplo,
          <emphasis>org.gvnix.test.service.Service</emphasis>.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    </para>
  </section>

  <section xml:id="apendice-comandos_addon-service_ws_list">
    <title>remote service ws list</title>

    <para xml:lang="es">Lista los servicios web que se encuentran definidos en
    la aplicación, tanto los que ofrecen servicios web al exterior como los que
    acceden a servicios web externos.</para>
    
    <para xml:lang="es">Este comando no tiene ningún parámetro obligatorio
    ni opcional.</para>
    
</section>

  <section xml:id="apendice-comandos_addon-service_security_ws">
    <title>remote service security ws</title>

    <para xml:lang="es">Añade o actualiza la configuración necesaria para firmar las
    peticiones que se hacen a un servicio web remoto.</para>

    <para xml:lang="es">Sus parámetros son:
    <variablelist>
      <varlistentry>
        <term>--class</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Clase Java] [Autocompletado]</emphasis></para>
          
          <para xml:lang="es">Paquete y nombre de la clase Java que define
          realiza el acceso al servicio web externo. Por ejemplo,
          <emphasis>org.gvnix.test.service.Service</emphasis>.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--certificate</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Cadena]</emphasis></para>

          <para xml:lang="es">Ruta y nombre del fichero donde se encuentra el
          certificado a utilizar para firmar la petición. El certificado debe
          de tener un formato <emphasis>pkcs12</emphasis> y una extensión
          <emphasis>p12</emphasis>. El certificado será copiado
          al directorio de recursos del proyecto. Por ejemplo,
          <emphasis>/tmp/certificado.p12</emphasis>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--password</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Cadena]</emphasis></para>

          <para xml:lang="es">Contraseña para acceder al certificado de firma.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>--alias</term>

        <listitem>
          <para xml:lang="es"><emphasis>[Requerido] [Cadena]</emphasis></para>

          <para xml:lang="es">Alias a utilizar para la firma.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    </para>
  </section>
</section>
