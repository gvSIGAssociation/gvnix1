<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="arquitectura-interna" xml:lang="es"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1998/Math/MathML"
         xmlns:ns4="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title xml:lang="es">Arquitectura interna</title>

  <section xml:id="arquitectura-interna_esquema-general" xml:lang="es">
    <title xml:lang="es">Esquema general de componentes</title>

    <para xml:lang="es">En el esquema siguiente podemos ver los principales
    componentes del framework.</para>

    <figure>
      <title>Esquema General de componentes del framework</title>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/roo-esquema-general-componentes.png"></imagedata>
        </imageobject>
      </mediaobject>
    </figure>

    <para xml:lang="es">Una breve descripción de los componentes sería:</para>

    <variablelist>
      <varlistentry>
        <term>Support</term>

        <listitem>
          <para xml:lang="es">Este componente engloba utilería genérica común
          en el framework.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Classpath</term>

        <listitem>
          <para xml:lang="es">Componente básico. Contiene las clases e
          interfaces básicos para el framework.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Shell</term>

        <listitem>
          <para xml:lang="es">El interprete de comando interactivo que recibe
          los comando que solicita el usuario. Soporta autocompletado
          (<literal>TAB</literal>) y ayuda en línea.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Process Manager</term>

        <listitem>
          <para xml:lang="es">Coordina la ejecución de los procesos ya venga
          de comandos del shell o de eventos que sucedan en el
          proyecto.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Model</term>

        <listitem>
          <para>Clases que se encarga de representar Tipos o clases
          Java.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Metadata</term>

        <listitem>
          <para xml:lang="es">Servicio de manejo de la información disponible
          del proyecto, tipos/clases, declaraciones de alto nivel (Entidades,
          controladores, etc...).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Project</term>

        <listitem>
          <para>Gestiona el proyecto en general y sus dependencias.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>File Undo</term>

        <listitem>
          <para>Pila de registro de comandos que permiten el deshacer los
          cambios realizados en los ficheros en caso de fallo.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>File Monitor</term>

        <listitem>
          <para>Componente que se encarga de registrar y monitorizar ficheros
          y directorios de nuestro proyecto.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para xml:lang="es">El sistemas se arranca en un framework OSGi, por lo
    que casi todos estos componentes se acceden como servicios referencias de
    servicios OSGi.</para>

    <para xml:lang="es">Aquí se detalla un poco más alguno de ellos.</para>
  </section>

  <section xml:id="arquitectura-interna_file-monitor" xml:lang="es">
    <title>File Monitor</title>

    <para xml:lang="es">El framework, mientras se está ejecutando la consola,
    esta monitorizando los cambios en los ficheros y directorios del proyecto
    apara poder ajustar los elementos generados por él mismo a los cambios que
    sufran los artefactos que gestiona.</para>

    <para xml:lang="es">Los elementos que gestiona este componente debe de ser
    registrados. También contiene la lista de subscriptores, identificados por
    su interface como servicios OSGi, que desean ser notificados de los
    cambios en los componentes que gestiona.</para>

    <para xml:lang="es">Por defecto, en el framework existen algunos ya
    implementados, como por ejemplo el que detecta los cambios en los
    <literal>.java</literal> y publica sus metadatos.</para>
  </section>

  <section xml:id="arquitectura-interna_model" xml:lang="es">
    <title>Model</title>

    <para xml:lang="es">En este componente contiene clases necesarias para
    representar la estructura de una clase java del proyecto.</para>
  </section>

  <section xml:id="arquitectura-interna_metadata" xml:lang="es">
    <title>Metadata</title>

    <para>Es el conjunto de información que tenemos sobre el proyecto (nombre,
    dependencias, etc..), tipos Java (métodos, campos, constructores...) y
    conceptos de alto nivel (Entidades, controladores, reglas de
    validación,...). Todos estos datos deben ser recopilados automáticamente
    desde el propio proyecto.</para>

    <para>Sus características son:</para>

    <itemizedlist>
      <listitem>
        <para>Son objetos inmutables.</para>
      </listitem>

      <listitem>
        <para>Cada uno tiene un identificador de tipo cadena único cuya
        generación es totalmente predecible. El primer requisito es que
        comience por los caracteres <literal>MID:</literal>.</para>
      </listitem>

      <listitem>
        <para>Se construyen bajo demanda, no se almacenan en el
        proyecto.</para>
      </listitem>

      <listitem>
        <para>Un metadato puede depender de otro. Si el metadato varia sus
        <emphasis>dependientes</emphasis> recibirán una notificación.</para>
      </listitem>

      <listitem>
        <para>Es posible monitorizar las notificaciones de los metadatos
        implementando un interface.</para>
      </listitem>
    </itemizedlist>

    <para>Para que el manejo de metadatos sea mas óptimo existe un servicio
    que cachea los metadatos.</para>
  </section>

  <section xml:id="arquitectura-interna_shell" xml:lang="es">
    <title>Shell</title>

    <para xml:lang="es">Componente que implementa una consola interactiva que
    soporta autocompletado y ayuda en linea. A través de este componente el
    framework interactúa con el usuario.</para>
  </section>

  <section xml:id="arquitectura-interna_process-manager" xml:lang="es">
    <title>Process Manager</title>

    <para>Gestiona y coordina la ejecución de los comando del Shell, la
    ejecución de los distintos monitores y la ejecución de las operaciones
    provocadas por los eventos de estos últimos.</para>

    <para>Una característica importante es que se encarga de registrar las
    acciones sobre los ficheros de los procesos, dentro del File Undo, para
    poder <emphasis>deshacerlas</emphasis> en caso de fallo en la
    ejecución.</para>

    <para>En el desarrollo de un Add-on se ha de utilizar el componente
    FileManager para la gestión de los ficheros (creación, actualización y
    eliminación) quedando así registrada cada acción sobre un fichero en
    determinado proceso para poder deshacer en caso de error.</para>
  </section>

  <section xml:id="arquitectura-interna_framework-osgi" xml:lang="es">
    <title>Framework OSGi</title>

    <para><emphasis>TBC</emphasis>.</para>

    <para>[Características. Descripción de los servicios y componentes.
    Referencias.] (Nuevo)</para>
  </section>
</chapter>
