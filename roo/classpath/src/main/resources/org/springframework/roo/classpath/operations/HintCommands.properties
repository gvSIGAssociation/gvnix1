topics=The following hints are available to help you use Roo:\r\r general, start, persistence, entities, fields, relationships, \r web mvc, finders, eclipse, logging, gwt\r\rJust type 'hint topic_name' (without quotes) to view a specific hint.

general=At this stage of the project, you have a few options:\r\r  * List all hint topics via 'hint topics'\r  * Create more fields with 'hint fields'\r  * Create more entities with 'hint entities'\r  * Create a web controller with 'hint web mvc'\r  * Create dynamic finders with 'hint finders'\r  * Setup your logging levels via 'hint logging'\r  * Run tests via Maven (type 'perform tests')\r  * Build a deployment artifact (type 'perform package')\r  * Learn about Eclipse integration by typing 'hint eclipse'\r  * Discover all Roo commands by typing 'help'

start=Welcome to Roo! We hope you enjoy your stay!\n\nBefore you can use many features of Roo, you need to start a new project.\r\rTo do this, type 'project' (without the quotes) and then hit ${completion_key}.\r\rEnter a --topLevelPackage like 'com.mycompany.projectname' (no quotes).\rWhen you've finished completing your --topLevelPackage, press ENTER.\rYour new project will then be created in the current working directory.\r\rNote that Roo frequently allows the use of ${completion_key}, so press ${completion_key} regularly.\rOnce your project is created, type 'hint' and ENTER for the next suggestion.\rYou're also welcome to visit http://stackoverflow.com/questions/tagged/spring-roo\rfor Roo help.
persistence=Roo requires the installation of a persistence configuration,\rfor example, JPA.\r\rFor JPA, type 'jpa setup' and then hit ${completion_key} three times.\rWe suggest you type 'H' then ${completion_key} to complete "HIBERNATE".\rAfter the --provider, press ${completion_key} twice for database choices.\rFor testing purposes, type (or ${completion_key}) HYPERSONIC_IN_MEMORY.\rIf you press ${completion_key} again, you'll see there are no more options.\rAs such, you're ready to press ENTER to execute the command.\r\rOnce JPA is installed, type 'hint' and ENTER for the next suggestion.\n\n
entities=You can create entities either via Roo or your IDE.\nUsing the Roo shell is fast and easy, especially thanks to the ${completion_key} completion.\r\rStart by typing 'ent' and then hitting ${completion_key} twice.\rEnter the --class in the form '~.domain.MyEntityClassName'\rIn Roo, '~' means the --topLevelPackage you specified via 'create project'.\r\rAfter specify a --class argument, press SPACE then ${completion_key}. Note nothing appears.\rBecause nothing appears, it means you've entered all mandatory arguments.\rHowever, optional arguments do exist for this command (and most others in Roo).\rTo see the optional arguments, type '--' and then hit ${completion_key}. Mostly you won't\nneed any optional arguments, but let's select the --testAutomatically option\nand hit ENTER. You can always use this approach to view optional arguments.\r\rAfter creating an entity, use 'hint' for the next suggestion.
fields=You can add fields to your entities using either Roo or your IDE.\n\nTo add a new field, type 'field' and then hit ${completion_key}. Be sure to select\nyour entity and provide a legal Java field name. Use ${completion_key} to find an entity\nname, and '~' to refer to the top level package. Also remember to use ${completion_key}\nto access each mandatory argument for the command.\n\nAfter completing the mandatory arguments, press SPACE, type '--' and then ${completion_key}.\nThe optional arguments shown reflect official JSR 303 Validation constraints.\nFeel free to use an optional argument, or delete '--' and hit ENTER.\n\nIf creating multiple fields, use the UP arrow to access command history.\n\nAfter adding your fields, type 'hint' for the next suggestion.\nTo learn about setting up many-to-one fields, type 'hint relationships'.
relationships=You create persistent relationships via 'field set' and 'field reference'.\n\nFor example, consider the typical Order <-> LineItem case:\n\n   ENTITY: Order            ENTITY: LineItem\n   Set<LineItem> items      Order order\n\nTo setup this relationship in Roo, you would use:\n\nfield set --fieldName items --class Order --type LineItem --mappedBy order\nfield reference --fieldName order --class LineItem --type Order --notNull\n\nLearn about fields addition using 'hint fields'.
web\ mvc=Creating RESTful Spring MVC web controllers is quick and easy using Roo.\nControllers can be made that automatically expose an entity. Alternately, we\ncan create a stub, empty controller for you to finish off.\n\nFor the former, type 'web mvc setup' and hit ENTER followed by 'web mvc scaffold' and hit ${completion_key} three times.\nThe --class is the controller name; it need not reflect an entity name.\nWe suggest putting controllers under a '~.web' package to improve maintenance.\nYou can also specify the --backingType the controller should expose.\n\nAfter creating a controller, use 'hint' for further suggestions.
finders=Roo can automatically create complex, type-safe finder methods.\n\nBe sure to add fields to your entity before creating finders.\nLearn how to add fields by typing 'hint fields'.\n\nTo view available finders, type 'finder list' then ${completion_key}.\nNext select your entity class and hit ENTER. Names are then displayed.\nYou can see even more finder combinations by using --depth 2 or higher.\n\nTo add a finder, type 'finder add' and hit ${completion_key} twice.\nSpecify a --finderName from the earlier displayed output of 'list finders for'.\n\nFor more hints, type 'hint' and hit ENTER.
eclipse=It's easy to use your project in Eclipse or SpringSource Tool Suite (STS).\r\rTo set this up, you'll need to use the command prompt and then Eclipse itself:\r\r  1. Start by typing 'exit', to leave the Roo shell\r  2. Type 'mvn eclipse:clean eclipse:eclipse' to create Eclipse project files\r  3. Load Eclipse, then File > Import > Existing Projects Into Workspace\r  4. Ensure AJDT 1.6.5 or above is installed in Eclipse\r  5. Enable Window > Preferences > General > Workspace > Refresh Automatically\r  6. Finally, restart Roo (type 'roo' at the OS prompt) and enter 'hint'\r\rPlease note if you have the m2eclipse plugin installed, you need only select\rImport > Maven Projects from the Eclipse Import menu.\r\rFor the best Eclipse experience, we recommend SpringSource Tool Suite (STS):\r\r  * Graphical editing of Roo commands\r  * No need to use the Roo shell\r  * Immediate importing of Roo projects\r  * Full Spring projects integration\r  * Many other productivity-increasing features\r\rDownload STS from http://springsource.com (it's free!).\r\rYou can also use 'perform eclipse' instead of leaving the Roo interface.
logging=You can easily configure logging levels in your project.\r\rRoo will update the log4j.properties file to control your logging.\r\rType 'logging setup' then hit ${completion_key} twice. We suggest 'DEBUG' level.\rYou may wish to specify the optional --package argument (defaults to 'ALL').\r\rRemember to type 'hint' for further hints and suggestions.
gwt=It's easy to create a GWT client in your project.\r\rJust type 'web gwt setup' and press ENTER.\r\rNote Roo's GWT support outputs GWT 2.2 applications.