//Creating Petclinic project
project --topLevelPackage com.springsource.petclinic --projectName petclinic
// Persistence
jpa setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT
// Enumerates
enum type --class ~.reference.PetType
enum constant --name Dog
enum constant --name Cat
enum constant --name Bird
enum type --class ~.reference.Specialty
enum constant --name Cardiology
enum constant --name Dentistry
enum constant --name Nutrition
// Creating entitys and fields
entity jpa --class ~.domain.Pet --sequenceName PET_SEQ
entity jpa --class ~.domain.Visit --sequenceName VISIT_SEQ
entity jpa --class ~.domain.AbstractPerson --abstract
entity jpa --class ~.domain.Vet --extends ~.domain.AbstractPerson
entity jpa --class ~.domain.Owner --extends ~.domain.AbstractPerson
field string --fieldName firstName --sizeMin 3 --sizeMax 30 --class ~.domain.AbstractPerson
field string --fieldName lastName --notNull --sizeMin 3 --sizeMax 30
field date --fieldName birthDay --type java.util.Date --notNull
field string --fieldName description --sizeMax 255 --class ~.domain.Visit
field date --fieldName visitDate --type java.util.Date --notNull --past
field reference --fieldName pet --type ~.domain.Pet --notNull
field reference --fieldName vet --type ~.domain.Vet
field boolean --fieldName sendReminders --notNull --primitive --class ~.domain.Pet
field string --fieldName name --notNull --sizeMin 1
field number --fieldName weight --type java.lang.Float --notNull --min 0
field reference --fieldName owner --type ~.domain.Owner
field enum --fieldName type --type ~.reference.PetType --notNull
field date --fieldName employedSince --type java.util.Calendar --notNull --past --class ~.domain.Vet
field enum --fieldName specialty --type ~.reference.Specialty --notNull false
field set --class ~.domain.Owner --fieldName pets --type ~.domain.Pet --mappedBy owner --notNull false --cardinality ONE_TO_MANY
field set --class ~.domain.Vet --fieldName visits --type ~.domain.Visit --mappedBy vet --notNull false --cardinality ONE_TO_MANY
field reference --fieldName owner --type ~.domain.Owner --class ~.domain.Vet
field set --fieldName vets --type ~.domain.Vet --class ~.domain.Owner --cardinality ONE_TO_MANY --mappedBy owner
field set --fieldName visits --type ~.domain.Visit --class ~.domain.Pet --cardinality ONE_TO_MANY --mappedBy pet
// Adding finders
finder add --finderName findPetsByNameAndWeight --class ~.domain.Pet
finder add --finderName findPetsByOwner
finder add --finderName findPetsBySendRemindersAndWeightLessThan
finder add --finderName findPetsByTypeAndNameLike
finder add --finderName findVisitsByDescriptionAndVisitDate --class ~.domain.Visit
finder add --finderName findVisitsByVisitDateBetween
finder add --finderName findVisitsByDescriptionLike
// Adding web layers
web mvc setup
web mvc all --package ~.web
web mvc finder all
web mvc language --code de
web mvc language --code es
// Enable gvNIX JPA utilities
jpa gvnix setup
// Creates a Spring @Service class with methods for entity batch updates
jpa batch all
// Enable gvNIX Web MVC Batch utilities
web mvc batch setup
// Add support for JPA batch operations in all controllers
web mvc batch all
// Adding JQuery, Datatables and Bootstrap
web mvc jquery setup
web mvc datatables setup
web mvc jquery all
web mvc bootstrap setup
// Creating master patterns
 web mvc datatables add --type ~.web.VetController --mode show
 web mvc datatables add --type ~.web.PetController
 web mvc datatables add --type ~.web.OwnerController --inline true
 web mvc datatables add --type ~.web.VisitController --inline true --ajax true
/////// At this point, the application is complete, and you can run
// Pattern: master table Owner > detail table Pet
 web mvc datatables detail add --type ~.web.OwnerController --property pets
// Pattern: master table Owner > detail table Vet
 web mvc datatables detail add --type ~.web.OwnerController --property vets
// Pattern: master table Owner > detail table Pet > detail table Visit
 web mvc datatables detail add --type ~.web.PetController --property visits
// Pattern: master table Owner > detail table Vet > detail table Visit
 web mvc datatables detail add --type ~.web.VetController --property visits
// Adding Loupe Components
web mvc loupe setup
// Adding loupe fields on Visit fields
web mvc loupe set --controller ~.web.VisitController
web mvc loupe field --controller ~.web.VisitController --field pet --caption name --additionalFields name,weight --max 5
// Adding loupe fields on Pet fields
web mvc loupe set --controller ~.web.PetController
web mvc loupe field --controller ~.web.PetController --field owner
// Setup menu
menu setup

// Fancytree setup
web mvc fancytree setup

// Adding fancytree show template
web mvc fancytree add show --controller ~.web.PetController


// Adding fancytree show template with page and custom mapping
web mvc fancytree add show --controller ~.web.VetController --page tree --mapping test

// Adding fancytree edit template with page
web mvc fancytree add edit --controller ~.web.OwnerController --page mytree 

// Updating fancytree resources
web mvc fancytree update tags