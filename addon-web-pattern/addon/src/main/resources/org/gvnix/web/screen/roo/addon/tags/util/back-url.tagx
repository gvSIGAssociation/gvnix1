<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:spring="http://www.springframework.org/tags" xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
  <!-- 
  Gets the "referer" url to back to.
  
  This tries to use the "gvnixBackUrl" parameter from current request (see url-referer.tagx). If this 
  parameter doesn't found uses the "header.referer" property (from http request). 
  
  Before store result, this perform a check to identify if restore url belongs to current application.
  If not throws an IllegalArgumentException exception. 
   -->
  <jsp:directive.tag import="org.apache.commons.codec.binary.Base64"/>
  <jsp:output omit-xml-declaration="yes" />

  <jsp:directive.attribute name="var" type="java.lang.String" required="true" rtexprvalue="false" description="" />

  <jsp:directive.variable alias="result" name-from-attribute="var" scope="AT_BEGIN" />

  <!-- === Default values === -->
  <c:set var="parameterName" value="gvnixBackUrl" />
  <c:set var="result" value="${header.referer}"/>
  <c:set var="tmpResult" value=""/>
  
  <c:forEach var="p" items="${param}" >
  	<c:if test="${p.key eq parameterName }">
  		<c:set var="tmpResult" value="${p.value}"/>
  	</c:if>
  </c:forEach>
  <c:if test="${not empty tmpResult}">
     <jsp:scriptlet>
     	<![CDATA[ 
    	String decoded = new String(Base64.decodeBase64(((String)jspContext.getAttribute("tmpResult"))));
    	// check decoded url
    	if (decoded.startsWith("?")){
    		// same path: ok
    	} else if (decoded.startsWith(request.getContextPath())) {
    		// same context path: ok
    	} else if (decoded.startsWith("/")){
    		// root relative url: ok
    	} else {
    		// different root: throw an exception
    		throw new IllegalArgumentException("Found back-url to an url out of this application: ".concat(decoded));
    	}
    	jspContext.setAttribute("tmpResult",decoded);
     	]]>
     </jsp:scriptlet>
     <c:set var="result" value="${tmpResult}"/>
  </c:if>
</jsp:root>